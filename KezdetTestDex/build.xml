<?xml version="1.0" encoding="UTF-8"?>
<project name="KezdetTestDex" default="makeDexJar">

    <property file="local.properties" />
    <property file="ant.properties" />
    <property name="verbose" value="true"/>
    <property environment="env" />
    <condition property="sdk.dir" value="${env.ANDROID_HOME}">
        <isset property="env.ANDROID_HOME" />
    </condition>

    <loadproperties srcFile="project.properties" />

    <!-- quick check on sdk.dir -->
    <fail
            message="sdk.dir is missing. Make sure to generate local.properties using 'android update project' or to inject it through the ANDROID_HOME environment variable."
            unless="sdk.dir"
    />

    <import file="custom_rules.xml" optional="true" />

    <!-- Import the actual build file.

         To customize existing targets, there are two options:
         - Customize only one target:
             - copy/paste the target into this file, *before* the
               <import> task.
             - customize it to your needs.
         - Customize the whole content of build.xml
             - copy/paste the content of the rules files (minus the top node)
               into this file, replacing the <import> task.
             - customize to your needs.

         ***********************
         ****** IMPORTANT ******
         ***********************
         In all cases you must update the value of version-tag below to read 'custom' instead of an integer,
         in order to avoid having your file be overridden by tools such as "android update project"
    -->
    <!-- version-tag: 1 -->
    <import file="${sdk.dir}/tools/ant/build.xml" />
    
    <target name="makeDexJar">
        <property name="out.dex.input.absolute.dir" value="${out.classes.absolute.dir}" />
        <dex executable="${dx}"
             output="${intermediate.dex.file}"
             nolocals="@{nolocals}"
             verbose="${verbose}">
             <path path="${out.dex.input.absolute.dir}"/>
        </dex>
        <jar destFile="${out.absolute.dir}/${ant.project.name}.jar"
            basedir="${out.absolute.dir}"
            includes="classes.dex"/>
        <signjar destDir="${out.absolute.dir}"
    		alias="kezdet"
    		keystore="../cert/kezdet-store"
    		storepass="password"
    		keypass="password2"
    		preservelastmodified="true">
  			<path>
    			<fileset dir="${out.absolute.dir}" includes="${ant.project.name}.jar" />
  			</path>
  			<flattenmapper />
		</signjar>
    	<copy file="${out.absolute.dir}/${ant.project.name}.jar" todir="../KezdetTestHost/assets" />
    	
    </target>

</project>
