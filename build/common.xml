<?xml version="1.0" encoding="utf-8"?>
<project name="common" xmlns:antcontrib="antlib:net.sf.antcontrib">
  <!-- Override properties by defining them in the local.properties file in the working copy root -->
  <property file="${working.dir}/local.properties" />

  <!-- The build configuration to use. -->
  <property name="configuration" value="debug" />

  <condition property="is_debug">
    <equals arg1="${configuration}" arg2="debug" casesensitive="false"/>
  </condition>
  <condition property="is_release">
    <not><isset property="is_debug"/></not>
  </condition>
    

  <!-- Load environment variables -->
  <property environment="env"/>

  <!-- Set common directory properties. -->
  <property name="build.dir" location="${working.dir}/bin"/>
  <property name="dist.dir" location="${working.dir}/dist" />
  <property name="log.dir" location="${working.dir}/logs"/>
  <property name="lib.dir" location="${working.dir}/lib"/>
  <property name="src.dir" location="${working.dir}/src"/>
  <property name="tools.dir" location="${working.dir}/tools"/>
  
  <!-- Set build directory properties. -->
  <property name="build.lib.dir" location="${build.dir}/lib"/>
  
  <!-- Certificate properties -->
  <property name="certs.dir" location="${working.dir}/certs"/>
  <!-- ANE Certificate Defaults -->
  <property name="ane.key.store" value="certs/kezdet.ane.p12"/>
  <property name="ane.key.storepass" value="test"/>
  <property name="ane.key.alias" value="1"/>
  
  <!-- TestApp Certificate Defaults -->
  <property name="testapp.key.store" value="certs/kezdet.testapp.p12"/>
  <property name="testapp.key.storepass" value="test"/>
  <property name="testapp.key.alias" value="1"/>
  
  <!-- Plugin Certificate Defaults -->
  <property name="plugin.key.store" value="certs/kezdet.plugin.p12"/>
  <property name="plugin.key.storepass" value="test"/>
  <property name="plugin.key.alias" value="1"/>
  <property name="plugin.key.public" value="certs/kezdet.plugin.cer"/>
  
  
  <!-- Absolute paths to keystores -->
  <property name="ane.key.store.absolute" location="${working.dir}/${ane.key.store}"/>
  <property name="plugin.key.store.absolute" location="${working.dir}/${plugin.key.store}"/>
  <property name="testapp.key.store.absolute" location="${working.dir}/${testapp.key.store}"/>
  <property name="plugin.key.public.absolute" location="${working.dir}/${plugin.key.public}"/>
  
  
  <macrodef name="propertyexists">
    <attribute name="property"/>
    <sequential>
      <fail unless="@{property}" message="@{property} has not been set. 
Please set the @{property} property in local.properties file."/>
    </sequential>
  </macrodef>

  <macrodef name="propertyorenvexists">
    <attribute name="property"/>
    <sequential>
      <fail unless="@{property}" message="@{property} has not been set. 
Please set the @{property} environment variable or set the @{property} property in local.properties file."/>
    </sequential>
  </macrodef>

  <!-- Set the Android SDK install directory -->
  <!-- try set using ANDROID_HOME environment variable -->
  <condition property="ANDROID_HOME" value="${env.ANDROID_HOME}">
    <isset property="env.ANDROID_HOME"/>
  </condition>
  <propertyorenvexists property="ANDROID_HOME"/>
</project>